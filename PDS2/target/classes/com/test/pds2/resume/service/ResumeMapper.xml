<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.test.pds2.resume.service.ResumeMapper">
	
	<!-- selectItemList 테이블조인 -->
	<!--	resultMap - type : 객체 타입
			resultMap - id : resultMap 명
			id : PK 멤버변수 지정. 
			id - column : DB 칼럼명
			id - property : 커맨드 객체 멤버변수 명
			result : PK 이외의 멤버변수 지정
			column, property는 id와 같은 방법으로 사용한다.
			association : 연관된 데이터를 맵핑시킨다.
			javaType : 조인될 객체 타입
			property : 커맨드 객체에서의 변수명
	 		
	 		데이터를 매핑시켜준다. 
			association => 1 : 1 관계 
			collection => 1 : 다 관계 (한명의 유저가 작성한 글 목록)
			일반 컬럼과 pk 구분 가능 pk 칼럼에게는 result 아닌 id 사용
		-->
	<resultMap type="com.test.pds2.resume.service.Resume" id="resume">
		<id column="resume_id" property="resumeId" />
		<result column="resume_title" property="resumeTitle" />
		<result column="resume_content" property="resumeContent" />
		<collection ofType="com.test.pds2.resume.service.ResumeFile" property="resumeFile">
				<id column="resume_file_id" property="resumeFileId"/>
				<result column="resume_file_name" property="resumeFileName"/>
				<result column="resume_file_ext" property="resumeFileExt"/>
				<result column="resume_file_size" property="resumeFileSize"/>
				<result column="resume_file_type" property="resumeFileType" />
				<result column="resume_id" property="resumeId" />		
		</collection>
	</resultMap>
	
	<insert id="insertResume" parameterType="com.test.pds2.resume.service.Resume">
			
		<selectKey resultType="int" keyProperty="resumeId" order="AFTER">  
            SELECT LAST_INSERT_ID()				<!-- insertQuery문의 auto-increment로 만들어지는 값 resume_id을 parameter였던-->
        </selectKey>							<!-- com.test.pds2.resume.service.Resume클래스의 resumeId에 자동으로 셋팅해준다-->
												<!-- order="AFTER" - insert쿼리 실행후에 자동증가 값이며  -->
		INSERT INTO resume						<!-- order="BEFORE"으로 할경우 쿼리 실행전의 자동증가값을 가져온다 -->
												<!-- 쿼리실행전에 자동증가값이 생기긴하나;; auto increment로 생긴 값을 가져온거였는뎅;; -->
				(resume_id
				,resume_title
				,resume_content
				)
			VALUES (
				NULL
				, #{resumeTitle}		<!-- resume클래스에 셋팅되어 있던 String 타입 resumeTitle -->
				, #{resumeContent}		<!-- resume클래스에 셋팅되어 있던 String 타입 resumeContent -->
			)				
	</insert>
			
	<select id="selectResumeList" parameterType="java.util.Map"  resultType="com.test.pds2.resume.service.Resume">
		SELECT
				resume_id as resumeId
				,resume_title as resumeTitle
				,resume_content as resumeContent
			FROM resume
			
		
			<!-- <choose>	      
		        <when test="searchOption == 'all'">    
		        	and resume_title like CONCAT('%', '#{keyword}', '%')
		        	or resume_content like CONCAT('%', '#{keyword}', '%')       	           
		        </when>
		        <otherwise>
		        	and #{searchOption} like CONCAT('%', '#{keyword}', '%')	             
		        </otherwise>
	    	</choose> -->
		
		ORDER BY resume_id DESC
		LIMIT #{beginRow}, #{pagePerRow}
	</select>
	
	<select id="totalCountResume"
			parameterType="java.util.Map"
			resultType="Integer">
		SELECT
		COUNT(*)
			FROM resume
		<!-- <choose>	      
	        <when test="searchOption == 'all'">    
	        	and resume like CONCAT('%', '#{keyword}','%')	        	           
	        </when>
	        <otherwise>
	        	and #{searchOption} like CONCAT('%','#{keyword}','%')	             
	        </otherwise>
	    </choose> -->
	</select>
	
	<select id="selectResumeOne" parameterType="com.test.pds2.resume.service.Resume"  resultMap="resume">
		SELECT
			rs.resume_id
			,rs.resume_title
			,rs.resume_content
			,rsf.resume_file_id
			,rsf.resume_file_name
			,rsf.resume_file_ext
			,rsf.resume_file_type
			,rsf.resume_file_size
			,rsf.resume_id
			FROM resume as rs
			left join resume_file as rsf
				using(resume_id)
				where resume_id = #{resumeId}
	</select>
	
	<delete id="deleteResume" parameterType="com.test.pds2.resume.service.Resume">
		DELETE 
			FROM resume
			WHERE resume_id=#{resumeId}
	</delete>
	
</mapper>
